{
  "type": "nomad_meta_info_1_0",
  "description": "meta info describing statistics, i.e. collected info",
  "dependencies": [ {
      "relativePath": "common.nomadmetainfo.json"
    }, {
      "relativePath": "meta_types.nomadmetainfo.json"
    }],
  "metaInfos": [ {
      "description": "stats by atom number",
      "kindStr": "type_section",
      "name": "section_stats_per_atom",
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "stats by unreduced composition",
      "kindStr": "type_section",
      "name": "section_stats_per_composition",
      "shape": [],
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "stats by electronic structure value",
      "kindStr": "type_section",
      "name": "section_stats_per_electronic_structure_method",
      "shape": [],
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "unique geometry ids and related statistics",
      "kindStr": "type_section",
      "name": "section_stats_per_geometry",
      "superNames": [
        "section_stats_per_composition"
      ]
    }, {
      "description": "statistics per meta info",
      "kindStr": "type_section",
      "name": "section_stats_per_meta_info",
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "statistics per parser",
      "kindStr": "type_section",
      "name": "section_stats_per_parser",
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "unique values for selected meta infos",
      "kindStr": "type_section",
      "name": "section_stats_values",
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "statistics on the calculation data either of a calculation or a group of calculations. All the values here should be collectable by merging various section_stats, to build a common section_stats. Reference to the single entries should normally be avoided. Try to keep the size of this limited, the goal should be that one could cache this in memory.",
      "kindStr": "type_section",
      "name": "section_stats",
      "superNames": []
    }, {
      "description": "length of meta info",
      "dtypeStr": "i64",
      "name": "stats_meta_count",
      "repeats": true,
      "shape": [],
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "meta infos contained in this calculation",
      "dtypeStr": "C",
      "name": "stats_meta_present",
      "repeats": true,
      "shape": [],
      "superNames": [
        "section_stats"
      ]
    }, {
      "description": "atom number of an atom present in the calculations, 0 is an undefined atom X",
      "dtypeStr": "i",
      "name": "stats_per_atom_atom_number",
      "shape": [],
      "superNames": [
        "section_stats_per_atom"
      ]
    }, {
      "description": "Chemical formula of the composition using chemical atom names in alphabetic order and the amount in the simulation cell if not 1.",
      "dtypeStr": "C",
      "name": "stats_per_composition_composition_formula",
      "shape": [],
      "superNames": [
        "section_stats_per_composition"
      ]
    }, {
      "description": "number of geometries (as defined by stats_per_geometry_geometry_id) with the current composition",
      "dtypeStr": "i64",
      "name": "stats_per_composition_n_geometries",
      "shape": [],
      "superNames": [
        "section_stats_per_composition"
      ]
    }, {
      "description": "number of section_single_configuration_calculation with the current composition",
      "dtypeStr": "i64",
      "name": "stats_per_composition_n_single_configuration_calculations",
      "shape": [],
      "superNames": [
        "section_stats_per_composition"
      ]
    }, {
      "description": "value of the electronic structure method",
      "dtypeStr": "C",
      "name": "stats_per_electronic_structure_method_value",
      "shape": [],
      "superNames": [
        "section_stats_per_electronic_structure_method"
      ]
    }, {
      "description": "geometry id, a checksum calculated using cell, atom position, and labels. This finds geometries that are trivially equivalent, geometries that are effectively equivalent might still have different ids.",
      "dtypeStr": "i64",
      "name": "stats_per_geometry_geometry_id",
      "shape": [],
      "superNames": [
        "section_stats_per_geometry"
      ]
    }, {
      "description": "number of section_single_configuration_calculation that have the current geometry",
      "dtypeStr": "i64",
      "name": "stats_per_geometry_n_single_configuration_calculations",
      "shape": [],
      "superNames": [
        "section_stats_per_geometry"
      ]
    }, {
      "description": "number of values of that meta info",
      "dtypeStr": "i64",
      "name": "stats_per_meta_info_n_values",
      "shape": [],
      "superNames": [
        "section_stats_per_parser"
      ]
    }, {
      "description": "name of the meta info",
      "dtypeStr": "C",
      "name": "stats_per_meta_info_name",
      "shape": [],
      "superNames": [
        "section_stats_per_parser"
      ]
    }, {
      "description": "number of main files assigned to this parser",
      "dtypeStr": "i64",
      "name": "stats_per_parser_n_assigned",
      "shape": [],
      "superNames": [
        "section_stats_per_parser"
      ]
    }, {
      "description": "number of main files that failed to be parsed",
      "dtypeStr": "i64",
      "name": "stats_per_parser_n_failed",
      "shape": [],
      "superNames": [
        "section_stats_per_parser"
      ]
    }, {
      "description": "number of main files sucessfully parsed",
      "dtypeStr": "i64",
      "name": "stats_per_parser_n_parsed",
      "shape": [],
      "superNames": [
        "section_stats_per_parser"
      ]
    }, {
      "description": "Parser id of the current parser",
      "dtypeStr": "C",
      "name": "stats_per_parser_parser_id",
      "shape": [],
      "superNames": [
        "section_stats_per_parser"
      ]
    }, {
      "description": "meta info whose values are cached here",
      "dtypeStr": "C",
      "name": "stats_values_meta_name",
      "shape": [],
      "superNames": [
        "section_stats_values"
      ]
    }, {
      "description": "unique string values for the meta info cached here",
      "dtypeStr": "C",
      "name": "stats_values_string_values",
      "repeats": true,
      "shape": [],
      "superNames": [
        "section_stats_values"
      ]
    }]
}
